--Во всех заданиях написать хранимую процедуру / функцию и продемонстрировать ее использование.

--Написать функцию возвращающую Клиента с наибольшей суммой покупки.
CREATE FUNCTION Sales.HighestPurchaseCustomerId()
RETURNS INT
AS
    BEGIN
        DECLARE @CustometID INT;
        WITH OrderAmount
            AS (SELECT il.InvoiceID, 
                         SUM(il.Quantity * ISNULL(il.UnitPrice, si.UnitPrice)) AS Amount
                FROM Sales.InvoiceLines il
                    INNER JOIN Warehouse.StockItems si ON il.StockItemID = si.StockItemID
                GROUP BY il.InvoiceID)
            SELECT TOP 1 @CustometID = c.CustomerID
            FROM Sales.Invoices i
                INNER JOIN OrderAmount oa ON i.InvoiceID = oa.InvoiceID
                INNER JOIN Sales.Customers c ON i.CustomerID = c.CustomerID
            ORDER BY oa.Amount DESC;
        RETURN @CustometID;
    END;
GO

--Написать хранимую процедуру с входящим параметром СustomerID, выводящую сумму покупки по этому клиенту.
--Использовать таблицы :
--Sales.Customers
--Sales.Invoices
--Sales.InvoiceLines
CREATE PROCEDURE Sales.GetCustomerTotalPurchaseAmount 
                @CustomerID INT
AS
    BEGIN
        SET NOCOUNT ON;
        SELECT @CustomerId AS [CustomerId], 
        (
            SELECT SUM(il.Quantity * il.UnitPrice)
            FROM Sales.InvoiceLines il
                INNER JOIN Sales.Invoices i ON il.InvoiceID = i.InvoiceID
            WHERE i.CustomerID = @CustomerID
        ) AS [TotalAmount];
    END;
GO


--Создать одинаковую функцию и хранимую процедуру, посмотреть в чем разница в производительности и почему.
-- К примеру, создадим такую же функцию, как и в 2 задании.
CREATE FUNCTION Sales.GetCustomerTotalPurchaseAmountFunction
					(@CustomerId INT)
RETURNS MONEY
AS
    BEGIN
        RETURN
        (
            SELECT SUM(il.Quantity * il.UnitPrice)
            FROM Sales.InvoiceLines il
                INNER JOIN Sales.Invoices i ON il.InvoiceID = i.InvoiceID
            WHERE i.CustomerID = @CustomerID
        );
    END;
GO

-- По сути, вызов хранимки и функции у меня не отличается, занимает примерное одинакое количество времени

--Создайте табличную функцию покажите как ее можно вызвать для каждой строки result set'а без использования цикла.
-- Три последних собранных заказа работником.
CREATE FUNCTION Sales.GetPackedInvoicesByPersonId(@PersonId INT)
RETURNS TABLE
AS
	RETURN(	
		SELECT TOP 3 i.InvoiceID
		FROM Sales.Invoices i
		WHERE i.PackedByPersonID = @PersonId
		ORDER BY i.InvoiceID, i.InvoiceDate DESC
	);
GO


-- Последние 3 собранных заказа по сотрудникам.
SELECT p.PersonID, p.FullName, TopInvoices.InvoiceId
FROM Application.People p
CROSS APPLY (
	SELECT ti.InvoiceId
	FROM Sales.GetPackedInvoicesByPersonId(p.PersonId) ti
) AS TopInvoices
WHERE p.IsEmployee = 1
