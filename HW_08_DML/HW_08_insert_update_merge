/*
Домашнее задание по курсу MS SQL Server Developer в OTUS.

Занятие "10 - Операторы изменения данных".

Задания выполняются с использованием базы данных WideWorldImporters.

Бэкап БД можно скачать отсюда:
https://github.com/Microsoft/sql-server-samples/releases/tag/wide-world-importers-v1.0
Нужен WideWorldImporters-Full.bak

Описание WideWorldImporters от Microsoft:
* https://docs.microsoft.com/ru-ru/sql/samples/wide-world-importers-what-is
* https://docs.microsoft.com/ru-ru/sql/samples/wide-world-importers-oltp-database-catalog
*/

-- ---------------------------------------------------------------------------
-- Задание - написать выборки для получения указанных ниже данных.
-- ---------------------------------------------------------------------------

USE WideWorldImporters

/*
1. Довставлять в базу пять записей используя insert в таблицу Customers или Suppliers 
*/

--Select top 10* From Sales.Customers
--Select top 10* From Purchasing.Suppliers

--Создам отдельную пустую таблицу Customers и потом в нее добавлю пять записей
--Учитываем что никаких ограничений и ключей у созданной таблицы не будет
GO
SELECT [CustomerID]
      ,[CustomerName]
      ,[PrimaryContactPersonID]
 into Sales.Customers_Copy
  FROM [WideWorldImporters].[Sales].[Customers]
  Where 1 = 2;					--ложное условие, которое позволяет таблице остаться пустой
--проверим что создали
Select * From Sales.Customers_Copy
  --Drop table if exists Sales.Customers_Copy
GO
Insert into Sales.Customers_Copy
	([CustomerID]
      ,[CustomerName]
      ,[PrimaryContactPersonID]
      )
Select TOP (5)
		[CustomerID]
      ,[CustomerName]
      ,[PrimaryContactPersonID]
	From  Sales.Customers
	Order by CustomerID
--проверим сколько строк появилось в таблице
Select * From Sales.Customers_Copy

/*
2. Удалите одну запись из Customers, которая была вами добавлена
*/

GO
WITH del As
	(Select top (1) *
	From Sales.Customers_Copy
	Order By CustomerID)

Delete 
From del
--проверим сколько осталось строк в таблице
Select * From Sales.Customers_Copy  --4 строки. Удалили первую с CustomerID=1

/*
3. Изменить одну запись, из добавленных через UPDATE
*/

--заменим в строке с CustomerID=3 имя на Jenia
GO

update Sales.Customers_Copy
set CustomerName='Jenia'
OUTPUT inserted.CustomerName as new_cust, deleted.CustomerName as old_cust
where CustomerID=5
Select * From Sales.Customers_Copy

/*
4. Написать MERGE, который вставит вставит запись в клиенты, если ее там нет, и изменит если она уже есть
*/

--определим вторую таблицу для вставки и обновления записей в первую таблицу
GO
SELECT [CustomerID]
      ,[CustomerName]
      ,[PrimaryContactPersonID]
       into Sales.Customers_Copy_2
  FROM [WideWorldImporters].[Sales].[Customers]
  Where 1 = 2;					--ложное условие, которое позволяет таблице остаться пустой
--проверим что создали
Select * From Sales.Customers_Copy_2
  --Drop table if exists Sales.Customers_Copy_2
GO
Insert into Sales.Customers_Copy_2
	([CustomerID]
      ,[CustomerName]
      ,[PrimaryContactPersonID])
Select TOP (3)
		[CustomerID]
      ,[CustomerName]
      ,[PrimaryContactPersonID]
	From  Sales.Customers
	Where  CustomerID >4 and CustomerID<8

--MERGE, который вставит запись из Customers_Copy в Customers_Copy_2, если ее там нет, и изменит если она уже есть (только по двум полям CustomerID, CustomerName, PrimaryContactPersonID)
MERGE Sales.Customers_Copy_2 t 
    USING Sales.Customers_Copy s
ON (s.CustomerID = t.CustomerID)
WHEN MATCHED
    THEN UPDATE SET 
--		t.CustomerID = s.CustomerID
        t.CustomerName = s.CustomerName,
        t.PrimaryContactPersonID = s.PrimaryContactPersonID
WHEN NOT MATCHED BY TARGET 
    THEN INSERT (CustomerID, CustomerName, PrimaryContactPersonID)
         VALUES (s.CustomerID, s.CustomerName, s.PrimaryContactPersonID)
WHEN NOT MATCHED BY SOURCE 
    THEN DELETE;

Select * From Sales.Customers_Copy
Select * From Sales.Customers_Copy_2

/*
5. Напишите запрос, который выгрузит данные через bcp out и загрузить через bulk insert
*/

EXEC sp_configure 'show advanced options', 1;
GO

RECONFIGURE;
GO

EXEC sp_configure 'xp_cmdshell',1;
GO

RECONFIGURE;
GO

SELECT @@SERVERNAME

exec master..xp_cmdshell 'bcp "[WideWorldImporters].Sales.Orders" out "D:\MS SQL Server Developer_otus\Lesson_09_insert, update, merge\Orders1.txt" -T -w -t, -S jeniadmi' --16173 Кб, 73595 строк

exec master..xp_cmdshell 'bcp "[WideWorldImporters].Sales.Orders" out "D:\MS SQL Server Developer_otus\Lesson_09_insert, update, merge\Orders12.txt" -T -w -t"@eu&$1&" -S jeniadmi' --29109 Кб, 73595 строк

drop table if exists [Sales].[Orders_BulkDemo]

Create table [Sales].[Orders_BulkDemo] (
	[OrderID] [int] not null
      ,[CustomerID] [int] not null
      ,[SalespersonPersonID] [int] not null
      ,[PickedByPersonID] [int] null
      ,[ContactPersonID] [int] not null
      ,[BackorderOrderID] [int] null
      ,[OrderDate] [date] not null
      ,[ExpectedDeliveryDate] [date] not null
      ,[CustomerPurchaseOrderNumber] [nvarchar] (20) null
      ,[IsUndersupplyBackordered] [bit] not null
      ,[Comments] [nvarchar] (max) null
      ,[DeliveryInstructions] [nvarchar] (max) null
      ,[InternalComments] [nvarchar] (max) null
      ,[PickingCompletedWhen] [datetime2] (7) null
      ,[LastEditedBy] [int] not null
      ,[LastEditedWhen] [datetime2] (7) not null
	  ,CONSTRAINT [PK_Sales_Orders_BulkDemo] PRIMARY KEY CLUSTERED
	  (
		[OrderID] ASC
		))
--		WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = OFF)
		

---

	BULK INSERT [WideWorldImporters].[Sales].[Orders_BulkDemo] --73595 строк
	FROM "D:\MS SQL Server Developer_otus\Lesson_09_insert, update, merge\Orders12.txt"
	WITH
	(
		BATCHSIZE = 1000,
		DATAFILETYPE = 'widechar',
		FIELDTERMINATOR = '@eu&$1&',
		ROWTERMINATOR = '\n',
		KEEPNULLS,
		TABLOCK
	);

	Select COUNT(*) from [WideWorldImporters].[Sales].[Orders_BulkDemo]
